<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quilt.dao.CommentDAO">
  <resultMap id="BaseResultMap" type="com.quilt.entity.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="head_pic" jdbcType="VARCHAR" property="headPic" />
    <result column="comment_pid" jdbcType="INTEGER" property="commentPid" />
    <result column="comment_name" jdbcType="VARCHAR" property="commentName" />
    <result column="comment_email" jdbcType="VARCHAR" property="commentEmail" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, article_id, head_pic, comment_pid, comment_name, comment_email, comment_content, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.quilt.entity.Comment">
    insert into comment (id, article_id, head_pic, 
      comment_pid, comment_name, comment_email, 
      comment_content, create_time)
    values (#{id,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{headPic,jdbcType=VARCHAR}, 
      #{commentPid,jdbcType=INTEGER}, #{commentName,jdbcType=VARCHAR}, #{commentEmail,jdbcType=VARCHAR}, 
      #{commentContent,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.quilt.entity.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="headPic != null">
        head_pic,
      </if>
      <if test="commentPid != null">
        comment_pid,
      </if>
      <if test="commentName != null">
        comment_name,
      </if>
      <if test="commentEmail != null">
        comment_email,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="headPic != null">
        #{headPic,jdbcType=VARCHAR},
      </if>
      <if test="commentPid != null">
        #{commentPid,jdbcType=INTEGER},
      </if>
      <if test="commentName != null">
        #{commentName,jdbcType=VARCHAR},
      </if>
      <if test="commentEmail != null">
        #{commentEmail,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.quilt.entity.Comment">
    update comment
    <set>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="headPic != null">
        head_pic = #{headPic,jdbcType=VARCHAR},
      </if>
      <if test="commentPid != null">
        comment_pid = #{commentPid,jdbcType=INTEGER},
      </if>
      <if test="commentName != null">
        comment_name = #{commentName,jdbcType=VARCHAR},
      </if>
      <if test="commentEmail != null">
        comment_email = #{commentEmail,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quilt.entity.Comment">
    update comment
    set article_id = #{articleId,jdbcType=INTEGER},
      head_pic = #{headPic,jdbcType=VARCHAR},
      comment_pid = #{commentPid,jdbcType=INTEGER},
      comment_name = #{commentName,jdbcType=VARCHAR},
      comment_email = #{commentEmail,jdbcType=VARCHAR},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteReplyByPid" parameterType="java.lang.Integer">
    delete from comment
    where comment_pid = #{pid,jdbcType=INTEGER}
  </delete>

  <select id="getAllUserComment" resultMap="BaseResultMap">
    select * from comment
    where comment_pid = 0
  </select>

  <select id="getAllReply" resultMap="BaseResultMap">
    select * from comment
    where comment_pid != 0
  </select>

  <select id="getAllCommentByArticleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from comment
    where article_id = #{articleId,jdbcType=INTEGER}
  </select>

  <select id="getCommentCount" resultType="java.lang.Integer">
    select  count(*) from comment
  </select>

  <select id="getTop8Comment" resultMap="BaseResultMap">
    select * from comment order by create_time desc limit 8
  </select>

  <delete id="deleteCommentByArticleId" parameterType="java.lang.Integer">
    delete from comment
    where article_id = #{articleId,jdbcType=INTEGER}
  </delete>

  <select id="getCommentCountByArticleId" resultType="java.lang.Integer">
    select count(*) from comment
    where article_id = #{articleId,jdbcType=INTEGER}
  </select>

</mapper>